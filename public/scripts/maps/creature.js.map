{"version":3,"names":[],"mappings":"","sources":["creature.js"],"sourcesContent":["import { uuid } from './utils.js';\nimport Field from './field.js';\nimport emitter from './emitter.js';\n\nclass Creature {\n    lifeCicle = 0;\n    alive = false;\n    lifespan = 0;\n    childNumber = 0;\n    reproductionFrequency = 0;\n\n    constructor() {\n        this.id = uuid();\n\n        console.log('creature makes some preparations');\n\n\n        // Field.add(this.constructor.name, this.id, this);\n        // emitter.on('cicle:turn', this.turn);\n    }\n\n    turn = () => {\n        // if (!this.alive) return;\n        // this.lifeCicle += 1;\n\n        // if (this.lifeCicle === this.lifespan)\n        //     return this.die();\n\n        // if (this.lifeCicle % this.reproductionFrequency === 0)\n        //     this.reproduce();\n    }\n\n    die() {\n        console.log('creature dies');\n\n        // this.alive = false;\n        // console.log('die');\n\n        // emitter.removeListener('cicle:turn', this.turn);\n\n        // Field.remove(this.constructor.name, this.id);\n    }\n\n    reproduce() {\n        console.log('creature reproduces');\n\n        // for (var i = 0; i < this.childNumber; i++) {\n        //   new this.constructor();\n        // }\n    }\n}\n\nexport default Creature;"],"file":"creature.js"}